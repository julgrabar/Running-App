{"version":3,"file":"static/js/163.ade80006.chunk.js","mappings":"2PASaA,EAAgB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,OAC/BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,UACGH,EAAMI,KACL,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAsBC,EAAhC,EAAcC,iBAAuCC,EAArD,EAA0CC,UAA1C,OACE,UAAC,KAAD,CAEED,OAAQA,EACRE,QAAS,kBAAMT,EAAS,cAAD,OAAeD,EAAf,YAAyBK,GAAvC,EAHX,WAKE,0BAAOD,KACP,uBAAIE,MALCD,EAFT,KAaP,E,kDChBYM,EAAoB,WAC/B,IAAQX,GAAWY,EAAAA,EAAAA,MAAXZ,OACFa,GAAaC,EAAAA,EAAAA,GAAeC,EAAAA,IAElC,GAKIC,EAAAA,EAAAA,UAAuB,CAAC,OAAQhB,EAAQa,IAAa,kBACvDI,EAAAA,EAAAA,IAAejB,EADwC,IAJjDkB,EADR,EACEC,KACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,QAKIrB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACqB,EAAD,WACGH,IAAa,SAAC,IAAD,IAEbE,IAAW,mDAEXD,GAAaH,IACZ,iCACE,SAAC,KAAD,CAASM,MAAI,EAAb,SAAeN,EAAKd,SACpB,SAACN,EAAD,CAAeC,MAAOmB,EAAKO,UAAWzB,OAAQkB,EAAKb,SAGvD,SAAC,IAAD,CACEqB,SAAO,EACPC,KAAK,SACLjB,QAAS,kBAAMT,EAAS,aAAf,EACT2B,MAAO,CAAEC,UAAW,QAJtB,UAME,0CAIP,EAED,IAEMN,EAAuBO,EAAAA,GAAAA,IAAH,oG,2KCnDbC,EAAU,yCAAG,yGACDC,IAAAA,IAAU,WADT,cAClBC,EADkB,yBAEjBA,EAASd,MAFQ,2CAAH,qDAKVF,EAAc,yCAAG,WAAOZ,GAAP,4FACL2B,IAAAA,IAAA,gBAAmB3B,EAAnB,MADK,cACtB4B,EADsB,yBAErBA,EAASd,MAFY,2CAAH,sDAKde,EAAY,yCAAG,WAAO7B,GAAP,4FACH2B,IAAAA,IAAA,oBAAuB3B,EAAvB,MADG,cACpB4B,EADoB,yBAEnBA,EAASd,MAFU,2CAAH,sDAKZgB,EAAoB,yCAAG,WAAO9B,GAAP,sEAClC2B,IAAAA,KAAW,wBAAyB,CAAEI,SAAU/B,IADd,2CAAH,qD","sources":["components/Trainings/TrainingsList.tsx","pages/TrainingsPage.tsx","services/api-service.ts"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { List, TrainingItem } from './Trainings.styled';\nimport { ITraining } from 'types/types';\n\ninterface IProps {\n  items: ITraining[];\n  weekId: number;\n}\n\nexport const TrainingsList = ({ items, weekId }: IProps) => {\n  const navigate = useNavigate();\n\n  return (\n    <List>\n      {items.map(\n        ({ title, id, workout_duration: duration, is_passed: passed }) => (\n          <TrainingItem\n            key={id}\n            passed={passed}\n            onClick={() => navigate(`/trainings/${weekId}/${id}`)}\n          >\n            <span>{title}</span>\n            <p>{duration}</p>\n          </TrainingItem>\n        )\n      )}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { useQuery } from 'react-query';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Heading } from 'components/Trainings/Trainings.styled';\nimport { TrainingsList } from 'components/Trainings/TrainingsList';\nimport { fetchTrainings } from 'services/api-service';\nimport { Button } from 'styles/Button.styled';\nimport { Loader } from 'styles/Loader.styled';\nimport { IWeek } from 'types/types';\nimport { useAppSelector } from 'redux/typedHooks';\nimport { getIsLoggedIn } from 'redux/auth/authSelectors';\n\nexport const WeekTrainingsPage = () => {\n  const { weekId } = useParams();\n  const isLoggedIn = useAppSelector(getIsLoggedIn);\n\n  const {\n    data: week,\n    isLoading,\n    isSuccess,\n    isError,\n  } = useQuery<IWeek, Error>(['week', weekId, isLoggedIn], () =>\n    fetchTrainings(weekId)\n  );\n\n  const navigate = useNavigate();\n\n  return (\n    <TrainingsPageWrapper>\n      {isLoading && <Loader />}\n\n      {isError && <p>Something went wrong...</p>}\n\n      {isSuccess && week && (\n        <>\n          <Heading dark>{week.title}</Heading>\n          <TrainingsList items={week.trainings} weekId={week.id} />\n        </>\n      )}\n      <Button\n        primary\n        type=\"button\"\n        onClick={() => navigate('/trainings')}\n        style={{ marginTop: '30px' }}\n      >\n        <span>Go back</span>\n      </Button>\n    </TrainingsPageWrapper>\n  );\n};\n\nexport default WeekTrainingsPage;\n\nconst TrainingsPageWrapper = styled.div`\n  text-align: center;\n  width: 100%;\n  max-width: 480px;\n  margin: auto;\n`;\n","import axios from 'axios';\n\nexport const fetchWeeks = async () => {\n  const response = await axios.get('/weeks/');\n  return response.data;\n};\n\nexport const fetchTrainings = async (id: string | undefined) => {\n  const response = await axios.get(`/week/${id}/`);\n  return response.data;\n};\n\nexport const fetchWorkout = async (id: string | undefined) => {\n  const response = await axios.get(`/training/${id}/`);\n  return response.data;\n};\n\nexport const finishWorkoutRequest = async (id: string) => {\n  axios.post('/users/pass/training/', { training: id });\n};\n"],"names":["TrainingsList","items","weekId","navigate","useNavigate","map","title","id","duration","workout_duration","passed","is_passed","onClick","WeekTrainingsPage","useParams","isLoggedIn","useAppSelector","getIsLoggedIn","useQuery","fetchTrainings","week","data","isLoading","isSuccess","isError","TrainingsPageWrapper","dark","trainings","primary","type","style","marginTop","styled","fetchWeeks","axios","response","fetchWorkout","finishWorkoutRequest","training"],"sourceRoot":""}