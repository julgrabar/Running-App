{"version":3,"file":"static/js/163.6e12173f.chunk.js","mappings":"2PASaA,EAAgB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,OAC/BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,UACGH,EAAMI,KACL,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAsBC,EAAhC,EAAcC,iBAAuCC,EAArD,EAA0CC,UAA1C,OACE,UAAC,KAAD,CAEED,OAAQA,EACRE,QAAS,kBAAMT,EAAS,cAAD,OAAeD,EAAf,YAAyBK,GAAvC,EAHX,WAKE,0BAAOD,KACP,uBAAIE,MALCD,EAFT,KAaP,E,4DCfYM,EAAoB,WAC/B,IAAQX,GAAWY,EAAAA,EAAAA,MAAXZ,OACFa,GAAaC,EAAAA,EAAAA,GAAeC,EAAAA,IAElC,GAA4BC,EAAAA,EAAAA,UAC1B,CAAC,OAAQhB,EAAQa,IACjB,kBAAMI,EAAAA,EAAAA,IAAejB,EAArB,IAFMkB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAIVC,EAAOF,GAAQG,EAAAA,EAAAA,MAAc,SAAAC,GAAE,OAAIA,EAAGjB,KAAOkB,OAAOvB,EAArB,IAEnC,OACE,UAACwB,EAAD,WACGL,IAAa,SAAC,IAAD,KAEZA,GAAaC,IACb,iCACE,SAAC,KAAD,CAASK,MAAI,EAAb,SAAeL,EAAKhB,SACpB,SAACN,EAAD,CAAeC,MAAOqB,EAAKM,UAAW1B,OAAQoB,EAAKf,SAGrDc,IAAcC,IAAQ,oDACxB,SAAC,IAAD,CAAShB,MAAM,UAAUuB,SAAO,EAACC,KAAK,aAAaC,UAAU,WAGlE,EAED,IAEML,EAAuBM,EAAAA,GAAAA,IAAH,oG","sources":["components/Trainings/TrainingsList.tsx","pages/TrainingsPage.tsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { List, TrainingItem } from './Trainings.styled';\nimport { ITraining } from 'types/types';\n\ninterface IProps {\n  items: ITraining[];\n  weekId: number;\n}\n\nexport const TrainingsList = ({ items, weekId }: IProps) => {\n  const navigate = useNavigate();\n\n  return (\n    <List>\n      {items.map(\n        ({ title, id, workout_duration: duration, is_passed: passed }) => (\n          <TrainingItem\n            key={id}\n            passed={passed}\n            onClick={() => navigate(`/trainings/${weekId}/${id}`)}\n          >\n            <span>{title}</span>\n            <p>{duration}</p>\n          </TrainingItem>\n        )\n      )}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { useQuery } from 'react-query';\nimport { useParams } from 'react-router-dom';\nimport { Heading } from 'components/Trainings/Trainings.styled';\nimport { TrainingsList } from 'components/Trainings/TrainingsList';\nimport { fetchTrainings } from 'services/api-service';\nimport { Loader } from 'styles/Loader.styled';\nimport { IWeek } from 'types/types';\nimport { useAppSelector } from 'redux/typedHooks';\nimport { getIsLoggedIn } from 'redux/auth/authSelectors';\nimport { defWeeks } from 'program/program';\nimport { GoToBtn } from 'components/Button/Button';\n\nexport const WeekTrainingsPage = () => {\n  const { weekId } = useParams();\n  const isLoggedIn = useAppSelector(getIsLoggedIn);\n\n  const { data, isLoading } = useQuery<IWeek, Error>(\n    ['week', weekId, isLoggedIn],\n    () => fetchTrainings(weekId)\n  );\n  let week = data || defWeeks.find(el => el.id === Number(weekId));\n\n  return (\n    <TrainingsPageWrapper>\n      {isLoading && <Loader />}\n\n      {!isLoading && week && (\n        <>\n          <Heading dark>{week.title}</Heading>\n          <TrainingsList items={week.trainings} weekId={week.id} />\n        </>\n      )}\n      {!isLoading && !week && <p>This week doesn't exist</p>}\n      <GoToBtn title=\"Go back\" primary path=\"/trainings\" marginTop=\"30px\" />\n    </TrainingsPageWrapper>\n  );\n};\n\nexport default WeekTrainingsPage;\n\nconst TrainingsPageWrapper = styled.div`\n  text-align: center;\n  width: 100%;\n  max-width: 480px;\n  margin: auto;\n`;\n"],"names":["TrainingsList","items","weekId","navigate","useNavigate","map","title","id","duration","workout_duration","passed","is_passed","onClick","WeekTrainingsPage","useParams","isLoggedIn","useAppSelector","getIsLoggedIn","useQuery","fetchTrainings","data","isLoading","week","defWeeks","el","Number","TrainingsPageWrapper","dark","trainings","primary","path","marginTop","styled"],"sourceRoot":""}