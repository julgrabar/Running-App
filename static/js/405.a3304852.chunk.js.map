{"version":3,"file":"static/js/405.a3304852.chunk.js","mappings":"uLAuCA,UA1BsB,WACpB,OAA4BA,EAAAA,EAAAA,UAAyB,QAASC,EAAAA,IAAtDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UACVC,EAAYF,GAAQG,EAAAA,EAExB,OACE,gCACGF,IAAa,SAAC,IAAD,CAAQG,UAAQ,KAE5BH,GAAaC,IACb,SAAC,KAAD,CAAMG,UAAQ,EAAd,SACGH,EAAUI,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,GAAjB,OACb,UAAC,KAAD,YACE,SAAC,KAAD,UAAUF,KACV,gBAAKG,IAAKF,EAAOG,IAAI,oBACrB,SAAC,IAAD,CACEJ,OAAO,wCACPK,KAAI,qBAAgBH,EAAhB,SALOA,EADF,QAcxB,C","sources":["pages/WeeksPage.tsx"],"sourcesContent":["import { useQuery } from 'react-query';\nimport { fetchWeeks } from 'services/api-service';\nimport {\n  List,\n  WeekItem,\n  Heading,\n} from '../components/Trainings/Trainings.styled';\nimport { FC } from 'react';\nimport { IWeek } from 'types/types';\nimport { Loader } from 'styles/Loader.styled';\nimport { defWeeks } from 'program/program';\nimport { GoToBtn } from 'components/Button/Button';\n\nconst WeeksPage: FC = () => {\n  const { data, isLoading } = useQuery<IWeek[], Error>('weeks', fetchWeeks);\n  let weeksList = data || defWeeks;\n\n  return (\n    <>\n      {isLoading && <Loader absolute />}\n\n      {!isLoading && weeksList && (\n        <List adaptive>\n          {weeksList.map(({ title, image, id }) => (\n            <WeekItem key={id}>\n              <Heading>{title}</Heading>\n              <img src={image} alt=\"running person\" />\n              <GoToBtn\n                title={<span>Start run</span>}\n                path={`/trainings/${id}/`}\n              />\n            </WeekItem>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default WeeksPage;\n"],"names":["useQuery","fetchWeeks","data","isLoading","weeksList","defWeeks","absolute","adaptive","map","title","image","id","src","alt","path"],"sourceRoot":""}